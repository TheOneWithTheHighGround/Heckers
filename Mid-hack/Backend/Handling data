// STEP 2: HANDLING THE DATA
// linking the firestore database 
// Initialize Firebase
firebase.initializeApp(firebaseConfig);

// Sign in with email/password
firebase.auth().signInWithEmailAndPassword(email, password)
  .then((userCredential) => {
    // Signed in 
    const user = userCredential.user;
    console.log("User signed in:", user);

    // Get a reference to the Firestore database
    const db = firebase.firestore();

    // Create a new document in the 'users' collection
    db.collection('users').doc(user.uid).set({
      displayName: user.displayName,
      email: user.email,
      // ... other user data
    })
    .then(() => {
      console.log("User data saved to Firestore");
    })
    .catch((error) => {
      console.error("Error saving user data:", error);
    });
  })
  .catch((error) => {
    // Handle errors
    console.error("Error signing in:", error);
  });
// Get a reference to the Firestore database
const db = firebase.firestore();

// Create a new issue document
const newIssue = {
  issueId: "unique-issue-id",
  photoUrl: "https://storage.googleapis.com/your-bucket/issue-photo.jpg",
  username: "username-of-fault-finder",
  timestamp: firebase.firestore.FieldValue.serverTimestamp(), // Get current timestamp
  upvotes: 0,
  downvotes: 0,
  title: "Broken Bench in Park", // Add title
  description: "The bench near the playground is broken and needs repair.", // Add description
  status: "Reported", // Add status (e.g., "Reported", "In Progress", "Resolved")
  location: { // Add location (latitude and longitude)
    latitude: 40.7128,
    longitude: -74.0060
  },
  comments: [] // Initialize an empty array for comments
};

db.collection("issues").doc(newIssue.issueId).set(newIssue)
  .then(() => {
    console.log("Issue created successfully!");
  })
  .catch((error) => {
    console.error("Error creating issue:", error);
  })
